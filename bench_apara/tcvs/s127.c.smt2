(declare-rel loop ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int ))
(declare-rel exit ())
(declare-var i Int )
(declare-var i1 Int )
(declare-var j Int )
(declare-var j1 Int )
(declare-var j2 Int )
(declare-var t0 Int )
(declare-var t1 Int )
(declare-var index_limit Int )
(declare-var a_j Int )
(declare-var a_j1 Int )
(declare-var b_i Int )
(declare-var c_i Int )
(declare-var d_i Int )
(declare-var e_i Int )
(declare-var count Int )
(declare-var a_array (Array Int Int) )
(declare-var a_array1 (Array Int Int) )
(declare-var a_array2 (Array Int Int) )
(declare-var b_array (Array Int Int) )
(declare-var c_array (Array Int Int) )
(declare-var d_array (Array Int Int) )
(declare-var e_array (Array Int Int) )

(rule (=> 
	(and 
		(= index_limit (- (* count 4) 1))
		(= i 0)
		(= j -1)
	)
	(loop a_array b_array c_array d_array e_array i j index_limit)
))
(rule (=> 
	(and 
		(loop a_array b_array c_array d_array e_array i j index_limit)
		(< i index_limit)
		(= b_i (select b_array i))
		(= c_i (select c_array i))
		(= d_i (select d_array i))
		(= e_i (select e_array i))
		(= t0 (* c_i d_i))
		(= t1 (* d_i e_i))
		(= a_j (+ b_i t0))
		(= a_j1 (+ b_i t1))
		(= a_array1 (store a_array j a_j))
		(= j1 (+ j 1))
		(= a_array2 (store a_array1 j1 a_j1))
		(= j2 (+ j1 1))
		(= i1 (+ i 1))
	)
	(loop a_array2 b_array c_array d_array e_array i1 j2 index_limit)
))
(rule (=> 
	(and 
		(loop a_array b_array c_array d_array e_array i j index_limit)
		(not (< i index_limit))
	)
	exit
))
(query exit)